repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local checkRadius = 1000
local positionCheckDelay = 180
local checkDelay = 10
local lastPosition = nil
local timeStuck = 0

-- Hàm hop server
local function hopToServer(targetPlaceId)
    targetPlaceId = targetPlaceId or game.PlaceId
    local success = pcall(function()
        local urlTemplate = "https://games.roblox.com/v1/games/" .. targetPlaceId .. "/servers/Public?sortOrder=Asc&limit=100&cursor="
        local cursor = ""
        local bestServer = nil

        while true do
            local response = HttpService:JSONDecode(game:HttpGet(urlTemplate .. cursor))
            for _, server in ipairs(response.data) do
                if server.id ~= game.JobId and server.playing < server.maxPlayers then
                    if not bestServer or server.playing < bestServer.playing then
                        bestServer = server
                    end
                end
            end
            if bestServer then break end
            if response.nextPageCursor then
                cursor = response.nextPageCursor
            else
                break
            end
        end

        if bestServer then
            TeleportService:TeleportToPlaceInstance(targetPlaceId, bestServer.id, LocalPlayer)
        else
            TeleportService:Teleport(targetPlaceId)
        end
    end)
    if not success then
        TeleportService:Teleport(targetPlaceId)
    end
end

-- Hàm kiểm tra người chơi gần
local function isNearPlayer()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
            if myPosition and (playerPosition - myPosition).Magnitude <= checkRadius then
                return true
            end
        end
    end
    return false
end

-- Hàm kiểm tra kẹt vị trí
local function checkStuck()
    local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
    if myPosition then
        if lastPosition and (myPosition - lastPosition).Magnitude < 1 then
            timeStuck = timeStuck + checkDelay
            if timeStuck >= positionCheckDelay then
                hopToServer()
            end
        else
            timeStuck = 0
        end
        lastPosition = myPosition
    end
end

-- Hàm bắt sự kiện chạm người chơi khác
local function detectTouch()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = LocalPlayer.Character.HumanoidRootPart
        humanoidRootPart.Touched:Connect(function(hit)
            local touchedPlayer = Players:GetPlayerFromCharacter(hit.Parent)
            if touchedPlayer and touchedPlayer ~= LocalPlayer then
                print("Touched player: " .. touchedPlayer.Name) -- Debug
                hopToServer()
            end
        end)
    end
end

-- Chạy sự kiện phát hiện chạm
spawn(detectTouch)

-- Vòng lặp chính
while true do
    -- Nếu phát hiện người chơi gần, hop server sau khoảng thời gian ngẫu nhiên
    if isNearPlayer() then
        task.wait(math.random(60, 120)) -- Chờ ngẫu nhiên 60-120 giây
        hopToServer()
        break
    end

    -- Kiểm tra kẹt vị trí
    checkStuck()
    task.wait(checkDelay)
end
