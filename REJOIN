repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local positionCheckDelay = 180
local checkDelay = 10
local lastPosition = nil
local timeStuck = 0

-- Hàm hop server
local function hopToServer(targetPlaceId)
    -- Sử dụng game.PlaceId hiện tại nếu không cung cấp targetPlaceId
    targetPlaceId = targetPlaceId or game.PlaceId

    local success = pcall(function()
        local urlTemplate = "https://games.roblox.com/v1/games/" .. targetPlaceId .. "/servers/Public?sortOrder=Asc&limit=100&cursor="
        local cursor = "" -- Con trỏ để duyệt qua các trang server
        local bestServer = nil

        while true do
            -- Lấy dữ liệu server từ API
            local response = HttpService:JSONDecode(game:HttpGet(urlTemplate .. cursor))
            for _, server in ipairs(response.data) do
                -- Tìm server ít người chơi nhất và không trùng JobId hiện tại
                if server.id ~= game.JobId and server.playing < server.maxPlayers then
                    if not bestServer or server.playing < bestServer.playing then
                        bestServer = server
                    end
                end
            end

            -- Nếu tìm được server phù hợp, dừng việc duyệt thêm
            if bestServer then
                break
            end

            -- Kiểm tra xem có tiếp tục duyệt qua trang khác không
            if response.nextPageCursor then
                cursor = response.nextPageCursor
            else
                break -- Không còn server nào nữa
            end
        end

        -- Teleport đến server ít người chơi nhất
        if bestServer then
            TeleportService:TeleportToPlaceInstance(targetPlaceId, bestServer.id, LocalPlayer)
        else
            -- Nếu không tìm được server nào tốt, teleport vào game
            TeleportService:Teleport(targetPlaceId)
        end
    end)

    -- Nếu có lỗi, fallback teleport đến game hiện tại
    if not success then
        TeleportService:Teleport(targetPlaceId)
    end
end

-- Bắt sự kiện chạm với người chơi khác
local function detectTouch()
    spawn(function()
        while true do
            task.wait()
            local character = LocalPlayer.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
                local humanoidRootPart = character.HumanoidRootPart
                humanoidRootPart.Touched:Connect(function(hit)
                    local touchedPlayer = Players:GetPlayerFromCharacter(hit.Parent)
                    if touchedPlayer and touchedPlayer ~= LocalPlayer then
                        print("Touched player: " .. touchedPlayer.Name) -- Debug
                        hopToServer() -- Hop server nếu chạm vào người chơi khác
                    end
                end)
                break
            end
        end
    end)
end

-- Kiểm tra kẹt vị trí
local function checkStuck()
    local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
    if myPosition then
        if lastPosition and (myPosition - lastPosition).Magnitude < 1 then
            timeStuck = timeStuck + checkDelay
            if timeStuck >= positionCheckDelay then
                hopToServer()
            end
        else
            timeStuck = 0
        end
        lastPosition = myPosition
    end
end

-- Khởi chạy bắt sự kiện chạm
detectTouch()

-- Vòng lặp chính
while true do
    -- Kiểm tra kẹt vị trí
    checkStuck()
    task.wait(checkDelay)
end

-- Gửi thông điệp mỗi 5 phút
spawn(function()
    while true do 
        task.wait(300)
        local Messages = "mua acc tai fakervn . c om"
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Messages, "All")
    end
end)
