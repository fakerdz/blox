repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local checkRadius = 30 -- Khoảng cách để phát hiện người chơi gần
local checkDelay = 10 -- Thời gian chờ giữa mỗi lần kiểm tra

-- Hàm hop server
local function hopToServer(targetPlaceId)
    targetPlaceId = targetPlaceId or game.PlaceId
    local serverFound = false

    while not serverFound do
        local success = pcall(function()
            local urlTemplate = "https://games.roblox.com/v1/games/" .. targetPlaceId .. "/servers/Public?sortOrder=Asc&limit=100&cursor="
            local cursor = ""
            local lowPlayerServers = {}

            while true do
                local response = HttpService:JSONDecode(game:HttpGet(urlTemplate .. cursor))
                for _, server in ipairs(response.data) do
                    if server.id ~= game.JobId and server.playing < server.maxPlayers and server.playing <= 2 then
                        table.insert(lowPlayerServers, server)
                    end
                end
                if response.nextPageCursor then
                    cursor = response.nextPageCursor
                else
                    break
                end
            end

            if #lowPlayerServers > 0 then
                local randomServer = lowPlayerServers[math.random(1, #lowPlayerServers)]
                serverFound = true
                TeleportService:TeleportToPlaceInstance(targetPlaceId, randomServer.id, LocalPlayer)
            else
                TeleportService:Teleport(targetPlaceId)
            end
        end)

        if not success then
            task.wait(2) -- Thử lại sau 2 giây
        end
    end
end

-- Hàm kiểm tra xem có người chơi gần không
local function isNearPlayer()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
            if myPosition and (playerPosition - myPosition).Magnitude <= checkRadius then
                return true
            end
        end
    end
    return false
end

-- Kiểm tra kẹt vị trí (giúp đảm bảo chuyển server nếu bị kẹt lâu)
local lastPosition = nil
local timeStuck = 0
local positionCheckDelay = 180 -- Thời gian kiểm tra khi bị kẹt
local function checkStuck()
    local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
    if myPosition then
        if lastPosition and (myPosition - lastPosition).Magnitude < 1 then
            timeStuck = timeStuck + checkDelay
            if timeStuck >= positionCheckDelay then
                hopToServer()
            end
        else
            timeStuck = 0
        end
        lastPosition = myPosition
    end
end

-- Vòng lặp chính
while true do
    -- Nếu phát hiện người chơi gần, ngay lập tức đổi server
    if isNearPlayer() then
        print("Player detected nearby! Hopping to another server...")
        hopToServer()
        break
    end

    -- Kiểm tra kẹt vị trí
    checkStuck()
    task.wait(checkDelay)
end

-- Gửi thông điệp mỗi 5 phút
spawn(function()
    while true do 
        task.wait(300) -- 5 phút
        local Messages = "mua acc tai fakervn . c om"
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Messages, "All")
    end
end)
