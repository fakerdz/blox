repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local positionCheckDelay = 180
local checkDelay = 10  -- Khoảng thời gian kiểm tra kẹt vị trí
local touchDelay = math.random(5, 10)  -- Thời gian ngẫu nhiên từ 10 đến 20 giây để kiểm tra sự kiện chạm
local lastPosition = nil
local timeStuck = 0
local touchTime = 0  -- Thời gian đã trôi qua từ khi sự kiện chạm xảy ra

-- Hàm hop server ngẫu nhiên có ít người chơi
local function hopToServer()
    local success = pcall(function()
        local url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
        local response = HttpService:JSONDecode(game:HttpGet(url))
        local availableServers = {}

        -- Duyệt qua danh sách server và lọc ra các server ít người chơi
        for _, server in ipairs(response.data) do
            if server.id ~= game.JobId and server.playing < server.maxPlayers then
                table.insert(availableServers, server)
            end
        end

        -- Nếu có các server ít người chơi, chọn ngẫu nhiên một server
        if #availableServers > 0 then
            local randomIndex = math.random(1, #availableServers)
            local selectedServer = availableServers[randomIndex]
            TeleportService:TeleportToPlaceInstance(game.PlaceId, selectedServer.id, LocalPlayer)
        else
            -- Nếu không tìm được server tốt, teleport vào game hiện tại
            TeleportService:Teleport(game.PlaceId)
        end
    end)

    -- Nếu có lỗi, fallback teleport đến game hiện tại
    if not success then
        TeleportService:Teleport(game.PlaceId)
    end
end

-- Bắt sự kiện chạm với người chơi khác
local function detectTouch()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = LocalPlayer.Character.HumanoidRootPart

        humanoidRootPart.Touched:Connect(function(hit)
            local touchedPlayer = Players:GetPlayerFromCharacter(hit.Parent)
            if touchedPlayer and touchedPlayer ~= LocalPlayer then
                -- Đảm bảo chỉ hop server khi chạm vào một người chơi khác
                if touchedPlayer.Character and touchedPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    print("Touched player: " .. touchedPlayer.Name) -- Debug
                    touchTime = tick()  -- Đặt thời gian bắt đầu sự kiện chạm
                end
            end
        end)
    end
end

-- Kiểm tra kẹt vị trí
local function checkStuck()
    local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
    if myPosition then
        if lastPosition and (myPosition - lastPosition).Magnitude < 1 then
            timeStuck = timeStuck + checkDelay
            if timeStuck >= positionCheckDelay then
                hopToServer()  -- Chuyển server nếu kẹt vị trí lâu
            end
        else
            timeStuck = 0
        end
        lastPosition = myPosition
    end
end

-- Kiểm tra nếu sự kiện chạm xảy ra trong vòng 10-20 giây
local function checkTouchTimeout()
    if touchTime > 0 and tick() - touchTime >= touchDelay then
        hopToServer()  -- Nếu quá 10-20 giây, hop server
        touchTime = 0  -- Reset thời gian chạm
    end
end

-- Khởi chạy bắt sự kiện chạm
spawn(detectTouch)

-- Vòng lặp chính
while true do
    -- Kiểm tra kẹt vị trí
    checkStuck()
    
    -- Kiểm tra nếu có sự kiện chạm xảy ra trong khoảng thời gian 10-20 giây
    checkTouchTimeout()

    task.wait(checkDelay)
end

-- Gửi thông điệp mỗi 5 phút
spawn(function()
    while true do 
        task.wait(300)
        local Messages = "mua acc tai fakervn . c om"
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Messages, "All")
    end
end)
