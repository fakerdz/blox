local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local LocalPlayer = Players.LocalPlayer
local checkRadius = 50 -- Khoảng cách kiểm tra người chơi gần (50)
local checkDelay = 180 -- Delay giữa mỗi lần kiểm tra level (180 giây)

-- Hàm kiểm tra có người chơi gần không
local function isNearPlayer()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
            
            if myPosition then
                local distance = (playerPosition - myPosition).Magnitude
                if distance <= checkRadius then
                    return true
                end
            end
        end
    end
    return false
end

-- Hàm lấy level của người chơi
local function getPlayerLevel()
    local stats = LocalPlayer:FindFirstChild("leaderstats")
    if stats and stats:FindFirstChild("Level") then
        return stats.Level.Value
    end
    return nil
end

-- Hàm hop sang server ít người
local function hopToLowPlayerServer()
    local success, result = pcall(function()
        local url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
        local response = HttpService:JSONDecode(game:HttpGet(url))

        for _, server in ipairs(response.data) do
            if server.playing < server.maxPlayers and server.id ~= game.JobId then
                TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id, LocalPlayer)
                return
            end
        end
    end)

    if not success then
        warn("Error hopping to server: " .. tostring(result))
    end
end

-- Hàm tạo thời gian chờ ngẫu nhiên từ 60 đến 120 giây
local function getRandomWaitTime()
    return math.random(60, 120)  -- Thời gian ngẫu nhiên giữa 60 và 120 giây
end

-- Kiểm tra stuck level và hop server nếu có người chơi gần
local function checkAndHop()
    local previousLevel = getPlayerLevel()

    while true do
        wait(checkDelay) -- Chờ delay giữa mỗi lần kiểm tra (180 giây)
        
        -- Kiểm tra stuck level
        local currentLevel = getPlayerLevel()
        if currentLevel and previousLevel then
            if currentLevel <= previousLevel then
                print("Level không tăng, rejoin server...")
                hopToLowPlayerServer()
                break
            else
                print("Level đã tăng, cập nhật level mới.")
                previousLevel = currentLevel
            end
        else
            print("Không thể lấy level, rejoin server...")
            hopToLowPlayerServer()
            break
        end

        -- Kiểm tra có người chơi gần
        if isNearPlayer() then
            local extraWaitTime = getRandomWaitTime()  -- Thời gian ngẫu nhiên
            print("Có người chơi gần, sẽ hop server sau " .. extraWaitTime .. " giây.")
            wait(extraWaitTime)
            hopToLowPlayerServer()
            break
        else
            print("Không có người chơi gần, tiếp tục kiểm tra.")
        end
    end
end

-- Chạy hàm kiểm tra và hop server
checkAndHop()
