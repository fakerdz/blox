repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local checkRadius = 100
local positionCheckDelay = 180
local checkDelay = 10
local maxIdleTime = 600 -- Thời gian tối đa kiểm tra level là 600 giây
local currentLevel = nil
local lastUpdateTime = os.time()
local lastPosition = nil
local timeStuck = 0

local function getLevel()
    if LocalPlayer:FindFirstChild("Data") and LocalPlayer.Data:FindFirstChild("Level") then
        return LocalPlayer.Data.Level.Value
    end
    return nil
end

local function isNearPlayer()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
            if myPosition and (playerPosition - myPosition).Magnitude <= checkRadius then
                return true
            end
        end
    end
    return false
end

local function hopToServer()
    local success, result = pcall(function()
        local url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
        local response = HttpService:JSONDecode(game:HttpGet(url))
        local bestServer = nil
        local minPlayers = math.huge

        for _, server in ipairs(response.data) do
            if server.id ~= game.JobId and server.playing < server.maxPlayers then
                -- Ưu tiên server ít người chơi
                if server.playing < minPlayers and server.playing > 0 then
                    bestServer = server
                    minPlayers = server.playing
                end
            end
        end

        if bestServer then
            TeleportService:TeleportToPlaceInstance(game.PlaceId, bestServer.id, LocalPlayer)
        else
            TeleportService:Teleport(game.PlaceId)
        end
    end)

    if not success then
        TeleportService:Teleport(game.PlaceId)
    end
end

local function checkStuck()
    local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
    if myPosition then
        if lastPosition and (myPosition - lastPosition).Magnitude < 1 then
            timeStuck = timeStuck + checkDelay
            if timeStuck >= positionCheckDelay then
                hopToServer()
            end
        else
            timeStuck = 0
        end
        lastPosition = myPosition
    end
end

while true do
    local newLevel = getLevel()
    if newLevel then
        if currentLevel == nil then
            currentLevel = newLevel
        elseif newLevel > currentLevel then
            currentLevel = newLevel
            lastUpdateTime = os.time()
        elseif os.time() - lastUpdateTime >= maxIdleTime then
            hopToServer()
        end
    end

    if isNearPlayer() then
        task.wait(math.random(60, 120))
        hopToServer()
        break
    end

    checkStuck()
    task.wait(checkDelay)
end
