repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local GuiService = game:GetService("GuiService")

local LocalPlayer = Players.LocalPlayer
local checkRadius = 100
local positionCheckDelay = 180
local checkDelay = 10
local maxIdleTime = 600 -- Thời gian tối đa kiểm tra level là 600 giây
local currentLevel = nil
local lastUpdateTime = os.time()
local lastPosition = nil
local timeStuck = 0

-- Biến đánh dấu thoát game tự nguyện
local voluntaryKick = false

local function getLevel()
    if LocalPlayer:FindFirstChild("Data") and LocalPlayer.Data:FindFirstChild("Level") then
        return LocalPlayer.Data.Level.Value
    end
    return nil
end

local function isNearPlayer()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
            if myPosition and (playerPosition - myPosition).Magnitude <= checkRadius then
                return true
            end
        end
    end
    return false
end

local function hopToServer()
    local success, result = pcall(function()
        local url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
        local response = HttpService:JSONDecode(game:HttpGet(url))
        for _, server in ipairs(response.data) do
            if server.id ~= game.JobId and server.playing < server.maxPlayers then
                TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id, LocalPlayer)
                return
            end
        end
    end)
    if not success then
        TeleportService:Teleport(game.PlaceId)
    end
end

local function checkStuck()
    local myPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character.HumanoidRootPart.Position
    if myPosition then
        if lastPosition and (myPosition - lastPosition).Magnitude < 1 then
            timeStuck = timeStuck + checkDelay
            if timeStuck >= positionCheckDelay then
                hopToServer()
            end
        else
            timeStuck = 0
        end
        lastPosition = myPosition
    end
end

local function checkFightingStyleByTool()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()

    -- Kiểm tra nếu nhân vật có Tool
    if character and character:FindFirstChildOfClass("Tool") then
        local tool = character:FindFirstChildOfClass("Tool")
        -- In ra tên công cụ (vũ khí) đang được sử dụng
        print("Đang sử dụng công cụ: " .. tool.Name)

        -- Kiểm tra nếu công cụ là "God Human"
        if tool.Name == "God Human" then
            return true
        end
    end
    return false
end

while true do
    local newLevel = getLevel()

    -- Kiểm tra liên tục
    if newLevel then
        if currentLevel == nil then
            currentLevel = newLevel
        elseif newLevel > currentLevel then
            currentLevel = newLevel
            lastUpdateTime = os.time()
        elseif os.time() - lastUpdateTime >= maxIdleTime then
            hopToServer()
        end

        -- Kiểm tra điều kiện level 2600 và God Human
        if newLevel >= 2600 and checkFightingStyleByTool() then
            print("Level đạt 2600 và sử dụng God Human, thoát game trong 120 giây...")
            local countdown = 120
            while countdown > 0 do
                print("Thoát game sau " .. countdown .. " giây...")
                task.wait(1)
                countdown = countdown - 1
            end
            voluntaryKick = true -- Đánh dấu rằng thoát game là tự nguyện
            game:Shutdown() -- Ngắt kết nối
            break
        end
    end

    if isNearPlayer() then
        task.wait(math.random(60, 120))
        hopToServer()
        break
    end

    checkStuck()
    task.wait(checkDelay) -- Đảm bảo rằng vòng lặp chạy liên tục
end

local reconnectDisabledList = {
    [Enum.ConnectionError.DisconnectLuaKick] = true,
    [Enum.ConnectionError.DisconnectSecurityKeyMismatch] = true,
    [Enum.ConnectionError.DisconnectNewSecurityKeyMismatch] = true,
    [Enum.ConnectionError.DisconnectDuplicateTicket] = true,
    [Enum.ConnectionError.DisconnectWrongVersion] = true,
    [Enum.ConnectionError.DisconnectProtocolMismatch] = true,
    [Enum.ConnectionError.DisconnectBadhash] = true,
    [Enum.ConnectionError.DisconnectIllegalTeleport] = true,
    [Enum.ConnectionError.DisconnectDuplicatePlayer] = true,
    [Enum.ConnectionError.DisconnectCloudEditKick] = true,
    [Enum.ConnectionError.DisconnectOnRemoteSysStats] = true,
    [Enum.ConnectionError.DisconnectRaknetErrors] = true,
    [Enum.ConnectionError.PlacelaunchFlooded] = true,
    [Enum.ConnectionError.PlacelaunchHashException] = true,
    [Enum.ConnectionError.PlacelaunchHashExpired] = true,
    [Enum.ConnectionError.PlacelaunchUnauthorized] = true,
    [Enum.ConnectionError.PlacelaunchUserLeft] = true,
    [Enum.ConnectionError.PlacelaunchRestricted] = true,
}

GuiService.ErrorMessageChanged:Connect(function()
    local error_code = GuiService:GetErrorCode()
    local error_type = GuiService:GetErrorType()
    if voluntaryKick then
        -- Không rejoin nếu thoát tự nguyện
        print("Người chơi thoát tự nguyện, không thực hiện reconnect.")
        return
    end
    if error_type == Enum.ConnectionError.DisconnectErrors and
        not reconnectDisabledList[error_code] then
        print('Disconnect registered!')
        while task.wait(5) do
            TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId)
        end
    end
end)

-- Variable to enable frame rate optimization features
FrameRateBoost = true

-- Function to lower texture quality and modify properties for performance optimization
function TextureLow()
    if not game:IsLoaded() then repeat wait() until game:IsLoaded() end
    if hookfunction and setreadonly then
        local mt = getrawmetatable(game)
        local old = mt.__newindex
        setreadonly(mt, false)
        local sda
        sda = hookfunction(old, function(t, k, v)
            -- Modify material properties for performance
            if k == "Material" then
                if v ~= Enum.Material.Neon and v ~= Enum.Material.Plastic and v ~= Enum.Material.ForceField then v = Enum.Material.Plastic end
            elseif k == "TopSurface" then v = "Smooth"
            elseif k == "Reflectance" or k == "WaterWaveSize" or k == "WaterWaveSpeed" or k == "WaterReflectance" then v = 0
            elseif k == "WaterTransparency" then v = 1
            elseif k == "GlobalShadows" then v = false end
            return sda(t, k, v)
        end)
        setreadonly(mt, true)
    end

    -- Apply changes to the existing environment
    local g = game
    local w = g.Workspace
    local l = g:GetService"Lighting"
    local t = w:WaitForChild"Terrain"
    t.WaterWaveSize = 0
    t.WaterWaveSpeed = 0
    t.WaterReflectance = 0
    t.WaterTransparency = 1
    l.GlobalShadows = false

    -- Function to change object properties
    function change(v)
        pcall(function()
            if v.Material ~= Enum.Material.Neon and v.Material ~= Enum.Material.Plastic and v.Material ~= Enum.Material.ForceField then
                pcall(function() v.Reflectance = 0 end)
                pcall(function() v.Material = Enum.Material.Plastic end)
                pcall(function() v.TopSurface = "Smooth" end)
            end
        end)
    end

    -- Apply changes to new objects added to the game
    game.DescendantAdded:Connect(function(v)
        pcall(function()
            if v:IsA"Part" then change(v)
            elseif v:IsA"MeshPart" then change(v)
            elseif v:IsA"TrussPart" then change(v)
            elseif v:IsA"UnionOperation" then change(v)
            elseif v:IsA"CornerWedgePart" then change(v)
            elseif v:IsA"WedgePart" then change(v) end
        end)
    end)

    -- Apply changes to all existing descendants
    for i, v in pairs(game:GetDescendants()) do
        pcall(function()
            if v:IsA"Part" then change(v)
            elseif v:IsA"MeshPart" then change(v)
            elseif v:IsA"TrussPart" then change(v)
            elseif v:IsA"UnionOperation" then change(v)
            elseif v:IsA"CornerWedgePart" then change(v)
            elseif v:IsA"WedgePart" then change(v) end
        end)
    end
end

-- Function to remove water objects from the workspace
function WaterRemove()
    for i,v in pairs(workspace:GetDescendants()) do
        if string.find(v.Name,"Water") then
            v:Destroy()
        end
    end
end

-- Function to remove specific objects like trees and houses
function ObjectRemove()
    for i,v in pairs(workspace:GetDescendants()) do
        if string.find(v.Name,"Tree") or string.find(v.Name,"House") then
            v:Destroy()
        end
    end
end

-- Function to make non-essential objects invisible
function InvisibleObject()
    for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
        if (v:IsA("Part") or v:IsA("MeshPart") or v:IsA("BasePart")) and v.Transparency then
            v.Transparency = 1
        end
    end
end

-- Main block that executes the optimizations if EzFrameRate is true
if FrameRateBoost then
    game.Players.LocalPlayer.PlayerScripts.WaterCFrame.Disabled = true
    game:GetService("Lighting"):ClearAllChildren()
    TextureLow()
    WaterRemove()
    ObjectRemove()
    InvisibleObject()
end
