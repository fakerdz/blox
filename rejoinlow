task.wait(30)

-- ‚öôÔ∏è Config
local checkDelay = 60
local stuckTimeout = 60
local noLevelUpTimeout = 600
local nearbyRadius = 30
local levelMax = 2650

-- üì¶ Services
local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer

-- üß† Tracking
local lastPosition = nil
local stuckTime = 0
local lastLevel = LocalPlayer.Data.Level.Value
local lastLevelChange = os.time()

-- üîÅ Hop Server
local function hopToServer()
    print("üîÅ Searching for new server...")
    local success = pcall(function()
        local url = "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100"
        local response = HttpService:JSONDecode(game:HttpGet(url))
        local best, minPlayers = nil, math.huge

        for _, server in ipairs(response.data) do
            if server.id ~= game.JobId and server.playing < server.maxPlayers and server.playing < minPlayers then
                best = server
                minPlayers = server.playing
            end
        end

        if best then
            print("üåê Switching to server with", best.playing, "players.")
            TeleportService:TeleportToPlaceInstance(game.PlaceId, best.id, LocalPlayer)
        else
            print("‚ö†Ô∏è No server found, rejoining.")
            TeleportService:Teleport(game.PlaceId)
        end
    end)

    if not success then
        print("‚ùå Teleport failed, retrying...")
        TeleportService:Teleport(game.PlaceId)
    end
end

-- üßç Check stuck
local function checkStuck()
    local char = LocalPlayer.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        local pos = char.HumanoidRootPart.Position
        if lastPosition and (pos - lastPosition).Magnitude < 1 then
            stuckTime += checkDelay
            print("üìå Still for:", stuckTime, "seconds")
            if stuckTime >= stuckTimeout then
                print("‚ö†Ô∏è Stuck too long ‚Üí hopping")
                hopToServer()
            end
        else
            stuckTime = 0
        end
        lastPosition = pos
    end
end

-- üë• Check nearby players
local function isNearPlayer()
    local myChar = LocalPlayer.Character
    if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then return false end
    local myPos = myChar.HumanoidRootPart.Position

    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
            local dist = (myPos - plr.Character.HumanoidRootPart.Position).Magnitude
            print("üë§", plr.Name, "is", math.floor(dist), "studs away")
            if dist <= nearbyRadius then return true end
        end
    end
    return false
end

-- üìà Check level up
task.spawn(function()
    while true do
        local level = LocalPlayer.Data.Level.Value
        print("üéØ Current level:", level)
        if level < levelMax then
            if level > lastLevel then
                lastLevel = level
                lastLevelChange = os.time()
            elseif os.time() - lastLevelChange >= noLevelUpTimeout then
                print("‚ö†Ô∏è No level gain for", noLevelUpTimeout, "seconds ‚Üí hopping")
                hopToServer()
            end
        else
            print("‚úÖ Level max reached, stopping level check.")
            break
        end
        task.wait(600)
    end
end)

-- üîÅ Main loop: check stuck + nearby
task.spawn(function()
    while true do
        if LocalPlayer.Data.Level.Value < levelMax then
            if isNearPlayer() then
                print("üë• Nearby player detected! Waiting 60s then hop...")
                task.wait(60)
                hopToServer()
            end
            checkStuck()
        else
            print("‚úÖ Level max reached, skipping checks.")
        end
        task.wait(checkDelay)
    end
end)

-- ü§ù Auto friend request
task.spawn(function()
    task.wait(30)
    while task.wait(60) do
        pcall(function()
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and not player:IsFriendsWith(LocalPlayer.UserId) then
                    LocalPlayer:RequestFriendship(player)
                    task.wait(1)
                end
            end
        end)
    end
end)

-- üí¨ Spam chat with fixed message
task.spawn(function()
    local message = "get a c c ount on fakervn . c om"
    local minDelay, maxDelay = 90, 150
    local ChatService = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
    local SayMessageRequest = ChatService and ChatService:FindFirstChild("SayMessageRequest")

    if SayMessageRequest then
        while LocalPlayer.Data.Level.Value < levelMax do
            SayMessageRequest:FireServer(message, "All")
            print("üí¨ Sent:", message)
            task.wait(math.random(minDelay, maxDelay))
        end
    else
        warn("‚ö†Ô∏è Chat system not found.")
    end
end)
